# Generated by Django 4.2.15 on 2025-09-17 17:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('pessoas', '0002_alter_parceironegocio_unique_together_and_more'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='NotaFiscal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tipo_nota', models.CharField(choices=[('ENTRADA', 'Entrada'), ('SAIDA', 'Saída'), ('SERVICO', 'Serviço')], max_length=10, verbose_name='Tipo de Nota')),
                ('chave_acesso', models.CharField(blank=True, max_length=44, null=True, unique=True, verbose_name='Chave de Acesso')),
                ('numero_documento', models.CharField(max_length=20, verbose_name='Número do Documento')),
                ('serie', models.CharField(max_length=10, verbose_name='Série')),
                ('data_emissao', models.DateTimeField(verbose_name='Data de Emissão')),
                ('data_entrada_saida', models.DateField(blank=True, null=True, verbose_name='Data de Entrada/Saída')),
                ('valor_total', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Valor Total da Nota')),
                ('situacao', models.CharField(blank=True, max_length=50, null=True, verbose_name='Situação')),
                ('id_legado_empresa', models.CharField(blank=True, max_length=50, null=True, verbose_name='ID Legado Empresa')),
                ('id_legado_cli_for', models.CharField(blank=True, max_length=50, null=True, verbose_name='ID Legado Cliente/Fornecedor')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contabilidade', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='notas_fiscais', to='core.contabilidade')),
                ('parceiro_pf', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='notas_fiscais', to='pessoas.pessoafisica')),
                ('parceiro_pj', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='notas_fiscais', to='pessoas.pessoajuridica')),
            ],
            options={
                'verbose_name': 'Nota Fiscal',
                'verbose_name_plural': 'Notas Fiscais',
                'db_table': 'fiscal_notas_fiscais',
            },
        ),
        migrations.CreateModel(
            name='NotaFiscalItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tipo_item', models.CharField(choices=[('PRODUTO', 'Produto'), ('SERVICO', 'Serviço')], max_length=10, verbose_name='Tipo do Item')),
                ('descricao', models.CharField(max_length=255, verbose_name='Descrição')),
                ('cfop', models.CharField(blank=True, max_length=10, null=True, verbose_name='CFOP')),
                ('cst', models.CharField(blank=True, max_length=10, null=True, verbose_name='CST')),
                ('ncm', models.CharField(blank=True, help_text='Nomenclatura Comum do Mercosul. Nulo para serviços.', max_length=10, null=True, verbose_name='NCM')),
                ('quantidade', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='Quantidade')),
                ('valor_unitario', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='Valor Unitário')),
                ('valor_total', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Valor Total do Item')),
                ('base_icms', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Base de Cálculo ICMS')),
                ('aliquota_icms', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Alíquota ICMS')),
                ('valor_icms', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Valor do ICMS')),
                ('base_icms_st', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Base de Cálculo ICMS ST')),
                ('aliquota_icms_st', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Alíquota ICMS ST')),
                ('valor_icms_st', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Valor do ICMS ST')),
                ('base_ipi', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Base de Cálculo IPI')),
                ('aliquota_ipi', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Alíquota IPI')),
                ('valor_ipi', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Valor do IPI')),
                ('base_pis', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Base de Cálculo PIS')),
                ('aliquota_pis', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Alíquota PIS')),
                ('valor_pis', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Valor do PIS')),
                ('cst_pis', models.CharField(blank=True, max_length=10, null=True, verbose_name='CST PIS')),
                ('base_cofins', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Base de Cálculo COFINS')),
                ('aliquota_cofins', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Alíquota COFINS')),
                ('valor_cofins', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Valor do COFINS')),
                ('cst_cofins', models.CharField(blank=True, max_length=10, null=True, verbose_name='CST COFINS')),
                ('valor_desconto', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Valor do Desconto')),
                ('valor_frete', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Valor do Frete')),
                ('valor_seguro', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Valor do Seguro')),
                ('valor_outras_despesas', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Outras Despesas Acessórias')),
                ('informacoes_adicionais', models.TextField(blank=True, null=True, verbose_name='Informações Adicionais')),
                ('nota_fiscal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='fiscal.notafiscal')),
            ],
            options={
                'verbose_name': 'Item da Nota Fiscal',
                'verbose_name_plural': 'Itens da Nota Fiscal',
                'db_table': 'fiscal_notas_fiscais_itens',
            },
        ),
        migrations.CreateModel(
            name='HistoricalNotaFiscalItem',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('tipo_item', models.CharField(choices=[('PRODUTO', 'Produto'), ('SERVICO', 'Serviço')], max_length=10, verbose_name='Tipo do Item')),
                ('descricao', models.CharField(max_length=255, verbose_name='Descrição')),
                ('cfop', models.CharField(blank=True, max_length=10, null=True, verbose_name='CFOP')),
                ('cst', models.CharField(blank=True, max_length=10, null=True, verbose_name='CST')),
                ('ncm', models.CharField(blank=True, help_text='Nomenclatura Comum do Mercosul. Nulo para serviços.', max_length=10, null=True, verbose_name='NCM')),
                ('quantidade', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='Quantidade')),
                ('valor_unitario', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='Valor Unitário')),
                ('valor_total', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Valor Total do Item')),
                ('base_icms', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Base de Cálculo ICMS')),
                ('aliquota_icms', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Alíquota ICMS')),
                ('valor_icms', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Valor do ICMS')),
                ('base_icms_st', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Base de Cálculo ICMS ST')),
                ('aliquota_icms_st', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Alíquota ICMS ST')),
                ('valor_icms_st', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Valor do ICMS ST')),
                ('base_ipi', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Base de Cálculo IPI')),
                ('aliquota_ipi', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Alíquota IPI')),
                ('valor_ipi', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Valor do IPI')),
                ('base_pis', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Base de Cálculo PIS')),
                ('aliquota_pis', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Alíquota PIS')),
                ('valor_pis', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Valor do PIS')),
                ('cst_pis', models.CharField(blank=True, max_length=10, null=True, verbose_name='CST PIS')),
                ('base_cofins', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Base de Cálculo COFINS')),
                ('aliquota_cofins', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Alíquota COFINS')),
                ('valor_cofins', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Valor do COFINS')),
                ('cst_cofins', models.CharField(blank=True, max_length=10, null=True, verbose_name='CST COFINS')),
                ('valor_desconto', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Valor do Desconto')),
                ('valor_frete', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Valor do Frete')),
                ('valor_seguro', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Valor do Seguro')),
                ('valor_outras_despesas', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Outras Despesas Acessórias')),
                ('informacoes_adicionais', models.TextField(blank=True, null=True, verbose_name='Informações Adicionais')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('nota_fiscal', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='fiscal.notafiscal')),
            ],
            options={
                'verbose_name': 'historical Item da Nota Fiscal',
                'verbose_name_plural': 'historical Itens da Nota Fiscal',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalNotaFiscal',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('tipo_nota', models.CharField(choices=[('ENTRADA', 'Entrada'), ('SAIDA', 'Saída'), ('SERVICO', 'Serviço')], max_length=10, verbose_name='Tipo de Nota')),
                ('chave_acesso', models.CharField(blank=True, db_index=True, max_length=44, null=True, verbose_name='Chave de Acesso')),
                ('numero_documento', models.CharField(max_length=20, verbose_name='Número do Documento')),
                ('serie', models.CharField(max_length=10, verbose_name='Série')),
                ('data_emissao', models.DateTimeField(verbose_name='Data de Emissão')),
                ('data_entrada_saida', models.DateField(blank=True, null=True, verbose_name='Data de Entrada/Saída')),
                ('valor_total', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Valor Total da Nota')),
                ('situacao', models.CharField(blank=True, max_length=50, null=True, verbose_name='Situação')),
                ('id_legado_empresa', models.CharField(blank=True, max_length=50, null=True, verbose_name='ID Legado Empresa')),
                ('id_legado_cli_for', models.CharField(blank=True, max_length=50, null=True, verbose_name='ID Legado Cliente/Fornecedor')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('contabilidade', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.contabilidade')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parceiro_pf', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pessoas.pessoafisica')),
                ('parceiro_pj', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pessoas.pessoajuridica')),
            ],
            options={
                'verbose_name': 'historical Nota Fiscal',
                'verbose_name_plural': 'historical Notas Fiscais',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddIndex(
            model_name='notafiscal',
            index=models.Index(fields=['contabilidade', 'chave_acesso'], name='fiscal_nota_contabi_e635ae_idx'),
        ),
        migrations.AddIndex(
            model_name='notafiscal',
            index=models.Index(fields=['contabilidade', 'data_emissao'], name='fiscal_nota_contabi_98dfbf_idx'),
        ),
        migrations.AddConstraint(
            model_name='notafiscal',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('parceiro_pf__isnull', False), ('parceiro_pj__isnull', True)), models.Q(('parceiro_pf__isnull', True), ('parceiro_pj__isnull', False)), _connector='OR'), name='apenas_um_parceiro_nao_nulo'),
        ),
        migrations.AlterUniqueTogether(
            name='notafiscal',
            unique_together={('contabilidade', 'numero_documento', 'serie', 'parceiro_pj', 'parceiro_pf')},
        ),
    ]
