# Generated by Django 5.2.5 on 2025-09-24 17:11

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='historicalusuario',
            name='data_ultima_atividade',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Última Atividade'),
        ),
        migrations.AddField(
            model_name='historicalusuario',
            name='ip_ultimo_acesso',
            field=models.GenericIPAddressField(blank=True, null=True, verbose_name='IP do Último Acesso'),
        ),
        migrations.AddField(
            model_name='historicalusuario',
            name='mfa_enabled',
            field=models.BooleanField(default=False, help_text='Autenticação de dois fatores habilitada', verbose_name='MFA Habilitado'),
        ),
        migrations.AddField(
            model_name='historicalusuario',
            name='mfa_secret',
            field=models.CharField(blank=True, help_text='Chave secreta para MFA', max_length=32, verbose_name='Secret MFA'),
        ),
        migrations.AddField(
            model_name='historicalusuario',
            name='modulos_acessiveis',
            field=models.JSONField(default=list, help_text='Lista de módulos que o usuário pode acessar', verbose_name='Módulos Acessíveis'),
        ),
        migrations.AddField(
            model_name='historicalusuario',
            name='pode_administrar_usuarios',
            field=models.BooleanField(default=False, help_text='Pode criar/editar usuários da contabilidade', verbose_name='Pode Administrar Usuários'),
        ),
        migrations.AddField(
            model_name='historicalusuario',
            name='pode_executar_etl',
            field=models.BooleanField(default=False, help_text='Pode executar comandos de ETL', verbose_name='Pode Executar ETL'),
        ),
        migrations.AddField(
            model_name='historicalusuario',
            name='pode_ver_dados_sensiveis',
            field=models.BooleanField(default=False, help_text='Pode visualizar dados sensíveis (salários, etc.)', verbose_name='Pode Ver Dados Sensíveis'),
        ),
        migrations.AddField(
            model_name='historicalusuario',
            name='tipo_usuario',
            field=models.CharField(choices=[('superuser', 'Superusuário'), ('admin', 'Administrador'), ('operacional', 'Operacional'), ('etl', 'ETL'), ('readonly', 'Somente Leitura')], default='operacional', max_length=20, verbose_name='Tipo de Usuário'),
        ),
        migrations.AddField(
            model_name='historicalusuario',
            name='token_version',
            field=models.IntegerField(default=1, help_text='Versão do token para invalidação global', verbose_name='Versão do Token'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='data_ultima_atividade',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Última Atividade'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='ip_ultimo_acesso',
            field=models.GenericIPAddressField(blank=True, null=True, verbose_name='IP do Último Acesso'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='mfa_enabled',
            field=models.BooleanField(default=False, help_text='Autenticação de dois fatores habilitada', verbose_name='MFA Habilitado'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='mfa_secret',
            field=models.CharField(blank=True, help_text='Chave secreta para MFA', max_length=32, verbose_name='Secret MFA'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='modulos_acessiveis',
            field=models.JSONField(default=list, help_text='Lista de módulos que o usuário pode acessar', verbose_name='Módulos Acessíveis'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='pode_administrar_usuarios',
            field=models.BooleanField(default=False, help_text='Pode criar/editar usuários da contabilidade', verbose_name='Pode Administrar Usuários'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='pode_executar_etl',
            field=models.BooleanField(default=False, help_text='Pode executar comandos de ETL', verbose_name='Pode Executar ETL'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='pode_ver_dados_sensiveis',
            field=models.BooleanField(default=False, help_text='Pode visualizar dados sensíveis (salários, etc.)', verbose_name='Pode Ver Dados Sensíveis'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='tipo_usuario',
            field=models.CharField(choices=[('superuser', 'Superusuário'), ('admin', 'Administrador'), ('operacional', 'Operacional'), ('etl', 'ETL'), ('readonly', 'Somente Leitura')], default='operacional', max_length=20, verbose_name='Tipo de Usuário'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='token_version',
            field=models.IntegerField(default=1, help_text='Versão do token para invalidação global', verbose_name='Versão do Token'),
        ),
        migrations.AlterField(
            model_name='historicalusuario',
            name='cpf',
            field=models.CharField(blank=True, db_index=True, max_length=11, null=True, verbose_name='CPF'),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='contabilidade',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usuarios', to='core.contabilidade', verbose_name='Contabilidade'),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='cpf',
            field=models.CharField(blank=True, max_length=11, null=True, unique=True, verbose_name='CPF'),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='gestk_usuario_set', related_query_name='gestk_usuario', to='auth.group', verbose_name='Groups'),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='gestk_usuario_set', related_query_name='gestk_usuario', to='auth.permission', verbose_name='User permissions'),
        ),
        migrations.AddIndex(
            model_name='usuario',
            index=models.Index(fields=['tipo_usuario'], name='core_usuari_tipo_us_8db849_idx'),
        ),
        migrations.AddIndex(
            model_name='usuario',
            index=models.Index(fields=['ativo'], name='core_usuari_ativo_ec70a2_idx'),
        ),
    ]
